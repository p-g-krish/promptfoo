{
  "$schema": "https://biomejs.dev/schemas/2.0.6/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true,
    "defaultBranch": "main"
  },
  "files": {
    "includes": ["**/*.js", "**/*.jsx", "**/*.ts", "**/*.tsx", "**/*.mjs", "**/*.cjs", "**/*.json"],
    "ignoreUnknown": true
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 100,
    "attributePosition": "auto",
    "includes": ["**/*.js", "**/*.jsx", "**/*.ts", "**/*.tsx", "**/*.mjs", "**/*.cjs", "**/*.json", "**/*.css", "**/*.scss", "**/*.html"]
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "style": {
        "noNonNullAssertion": "off",
        "useConst": "error",
        "useShorthandFunctionType": "error",
        "useForOf": "error",
        "useAsConstAssertion": "error",
        "useNodejsImportProtocol": "off",
        "noUselessElse": "error",
        "useBlockStatements": "error",
        "useSingleVarDeclarator": "error",
        "useShorthandAssign": "error",
        "useTemplate": "error",
        "useConsistentArrayType": {
          "level": "error",
          "options": {
            "syntax": "shorthand"
          }
        }
      },
      "complexity": {
        "noBannedTypes": "off",
        "noUselessTypeConstraint": "error",
        "noForEach": "off",
        "useArrowFunction": "off",
        "noStaticOnlyClass": "off"
      },
      "correctness": {
        "noUnusedVariables": "warn",
        "noUnusedImports": "error",
        "useExhaustiveDependencies": "off",
        "noUndeclaredVariables": "off",
        "noInvalidUseBeforeDeclaration": "error",
        "noUnusedFunctionParameters": "off",
        "useHookAtTopLevel": "off",
        "useJsxKeyInIterable": "warn"
      },
      "suspicious": {
        "noExplicitAny": "off",
        "noImplicitAnyLet": "off",
        "noArrayIndexKey": "off",
        "noConsole": "off",
        "noDebugger": "error",
        "noDoubleEquals": "off",
        "noFallthroughSwitchClause": "error",
        "noGlobalIsNan": "error",
        "noMisleadingCharacterClass": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noShadowRestrictedNames": "error",
        "noAssignInExpressions": "off",
        "noVar": "error",
        "noControlCharactersInRegex": "off"
      },
      "nursery": {
        "useSortedClasses": "off"
      },
      "security": {
        "noDangerouslySetInnerHtml": "off"
      },
      "performance": {
        "noDelete": "warn",
        "noAccumulatingSpread": "off",
        "noDynamicNamespaceImportAccess": "off"
      },
      "a11y": {
        "useButtonType": "off",
        "useKeyWithClickEvents": "off",
        "noStaticElementInteractions": "off",
        "useMediaCaption": "off",
        "noRedundantAlt": "off",
        "useSemanticElements": "off",
        "noSvgWithoutTitle": "off",
        "noLabelWithoutControl": "off"
      }
    }
  },
  "javascript": {
    "formatter": {
      "enabled": true,
      "quoteStyle": "single",
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "all",
      "semicolons": "always",
      "arrowParentheses": "always",
      "bracketSpacing": true,
      "bracketSameLine": false,
      "attributePosition": "auto"
    },
    "parser": {
      "unsafeParameterDecoratorsEnabled": false
    }
  },
  "json": {
    "formatter": {
      "enabled": true,
      "indentStyle": "space",
      "indentWidth": 2,
      "lineEnding": "lf"
    }
  },
  "overrides": [
    {
      "includes": ["examples/**", "site/**"],
      "linter": {
        "rules": {
          "complexity": {
            "noForEach": "off"
          },
          "style": {
            "useConst": "warn"
          },
          "correctness": {
            "noUnusedVariables": "warn"
          },
          "suspicious": {
            "noVar": "warn"
          }
        }
      }
    },
    {
      "includes": ["**/*.test.ts", "**/*.test.tsx", "**/*.spec.ts", "**/*.spec.tsx"],
      "linter": {
        "rules": {
          "suspicious": {
            "noExplicitAny": "off"
          }
        }
      }
    }
  ]
}